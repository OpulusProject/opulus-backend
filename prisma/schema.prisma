generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OnboardingStatus {
  IN_PROGRESS
  COMPLETED
}

model User {
  id               String           @id @default(cuid())
  plaidId          String?          @unique
  plaidUserToken   String?          @unique
  firstName        String?
  lastName         String?
  email            String           @unique
  password         String?
  onboardingStatus OnboardingStatus @default(IN_PROGRESS)
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt

  linkSession      LinkSession[]
  items            Item[]
}

model LinkSession {
  id               String           @id @default(cuid())
  userId           String
  linkToken        String           @unique
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt

  user             User             @relation(fields: [userId], references: [id])
}

model Item {
  id               String           @id @default(cuid())
  plaidId          String           @unique
  userId           String
  accessToken      String
  institutionId    String?
  institutionName  String?
  transactionCursor String?
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @default(now())

  user             User             @relation(fields: [userId], references: [id])
  accounts         Account[]
}

model Account {
  id               String           @id @default(cuid())
  plaidId          String           @unique
  itemId           String
  mask             String?
  name             String?
  officialName     String?
  type             String
  subtype          String?
  availableBalance Float?
  currentBalance   Float?
  limit            Float?
  currencyCode     String?
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @default(now())

  item             Item             @relation(fields: [itemId], references: [plaidId])
  transactions     Transaction[]
}

model Transaction {
  id              String           @id @default(cuid())
  plaidId         String           @unique
  accountId       String
  amount          Float
  currencyCode    String?
  pending         Boolean
  date            String
  authorizedDate  String?
  paymentChannel  String
  transactionCode String?
  address         String?
  city            String?
  region          String?
  postalCode      String?
  country         String?
  name            String
  merchantName    String?
  logoURL         String?
  website         String?
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @default(now())

  account         Account          @relation(fields: [accountId], references: [plaidId])
}